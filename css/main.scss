$rg-color-beginning: #78d5ff;
$rg-color-ending: #0081e8;
$bs-color: #e0e0e0;
$border-color: rgb(151, 151, 151);
$transform: 100px; 
$width: 100%;
$height: 100%;
$list-params: (
    (-100px, 100%, 100%), 
    (100px, 100%, 100%), 
    (100px, 35%, 35%), 
    (-100px, 35%, 35%),
    (-99.99px, 100%, 100%));

@mixin transform-circle($transform, $width, $height) {
    transform: translateZ($transform);
    width: $width;
    height: $height;
}

body {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: 
    radial-gradient($rg-color-beginning, $rg-color-ending);
}

.loader {
    position: relative;
    width: 180px;
    height: 180px;
    display: flex;
    justify-content: center;
    align-items: center;
    transform-style: preserve-3d;
    transform: perspective(500px) rotateX(45deg);

    span {
        position: absolute;
        display: block;
        border: 15px solid $border-color;
        box-sizing: border-box;
        border-radius: 50%;
        box-shadow: 
        0 10px 0 $bs-color, 
        inset 0 10px 0 $bs-color;
        animation: animate-circles 4.5s ease-in-out infinite;

        @for $i from 0 to 3 {
            &:nth-child(#{$i + 1}) {
                animation-delay: 1.5s * $i;
            }
        }
    }
}

@keyframes animate-circles {
    @each $tc-params in $list-params {
        $index: index($list-params, $tc-params);
        $index: $index - 1;
        #{$index * 25%} {
            @include transform-circle($tc-params...);
        }
    }
    /* 0% {
        @include transform-circle($transform-circle-params-0...);
    }
    25% {
        @include transform-circle($transform-circle-params-25...);
    }
    50% {
        @include transform-circle($transform-circle-params-50...);
    }
    75% {
        @include transform-circle($transform-circle-params-75...);
    }
    100% {
        @include transform-circle($transform-circle-params-100...);
    } */
}

